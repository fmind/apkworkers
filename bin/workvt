#!/usr/bin/env python
# -*- coding: utf-8 -*-
"""Create a list of tasks for VirusTotal workers."""

import argparse
import sys
import csv

from collections import deque
from datetime import datetime

from itertools import imap

from servalx import androzoo, virustotal

PARSER = argparse.ArgumentParser(description=__doc__)
PARSER.add_argument('metasfile', type=argparse.FileType('r'))
PARSER.add_argument('quota', type=int, help='daily quota of the API.')


def to_scan_date(s):
    try:
        return datetime.strptime(s, virustotal.FORMAT_SCAN_DATE)
    except ValueError:
        return None


def workvt(metas, quota):
    reports = deque()
    header = next(metas)
    now = datetime.now()
    to_record = lambda row: dict(zip(header, row))
    by_scan_date = lambda x: x.get('vt_scan_date')
    records = sorted(imap(to_record, metas), key=by_scan_date)

    # safe guard
    assert header == androzoo.META_COLUMNS

    for record in records:
        id_ = record['sha256']
        scan_date = to_scan_date(record['vt_scan_date'])

        # select task based on scan_date
        if scan_date is None:
            yield ['vtscan', id_]
            reports.append(['vtreport', id_])
        elif scan_date.year != now.year:
            yield ['vtrescan', id_]
            reports.append(['vtreport', id_])
        else:
            continue

        # alternate with report tasks
        if len(reports) == quota:
            for task in reports:
                yield task

            reports.clear()

    # yield leading reports
    for task in reports:
        yield task


if __name__ == '__main__':
    args = PARSER.parse_args()

    tasks = workvt(csv.reader(args.metasfile), args.quota)
    csv.writer(sys.stdout).writerows(tasks)
